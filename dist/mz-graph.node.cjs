/*
https://github.com/mzusin/mz-graph
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var y=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var v=(r,t)=>{for(var u in t)y(r,u,{get:t[u],enumerable:!0})},w=(r,t,u,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let d of I(t))!j.call(r,d)&&d!==u&&y(r,d,{get:()=>t[d],enumerable:!(a=T(t,d))||a.enumerable});return r};var A=r=>w(y({},"__esModule",{value:!0}),r);var N={};v(N,{graph:()=>M,matrix:()=>S});module.exports=A(N);var M=r=>{let t=new Map,u=o=>{t.has(o.label)||t.set(o.label,[])},a=o=>{var n;return(n=t.get(o))!=null?n:null},d=(o,n)=>{var l,c;(l=t.get(o.label))==null||l.push(n),r.isDirected||(c=t.get(n.label))==null||c.push(o)},g=()=>{for(let[o,n]of t.entries()){let l=n.map(c=>{let e=c.value!==void 0?`(${c.value})`:"";return`${c.label}${e}`}).join(", ");console.log(`${o} -> [${l}]`)}},m=o=>{let n=new Set,l=e=>{let s=[e];for(n.add(e);s.length>0;){let b=s.shift();o(b);let h=a(b)||[];for(let f of h)n.has(f.label)||(n.add(f.label),s.push(f.label))}},c=t.keys();for(let e of c)n.has(e)||l(e)},L=o=>{let n=new Set,l=e=>{let s=[e];for(n.add(e);s.length>0;){let b=s.pop();o(b);let h=a(b)||[];for(let f of h)n.has(f.label)||(n.add(f.label),s.push(f.label))}},c=t.keys();for(let e of c)n.has(e)||l(e)},i=o=>{let n=new Set,l=e=>{if(n.has(e))return;n.add(e),o(e);let s=a(e);if(s)for(let b of s)l(b.label)},c=t.keys();for(let e of c)l(e)};return(()=>{if(!r.initial)return;let o=Object.keys(r.initial);for(let n of o){let l=r.initial[n]||[];t.set(n,l)}})(),{addVertex:u,getVertex:a,addEdge:d,printGraph:g,bfs:m,dfs:L,dfsRecursive:i}};var C=r=>{var t,u;if(r.initial){let a=r.initial.length,d=a>0?r.initial[0].length:0;return[a,d]}return[(t=r.rowsCount)!=null?t:0,(u=r.columnsCount)!=null?u:0]},S=r=>{let[t,u]=C(r),a=Array(t),d=()=>a,g=(i,o,n)=>{a[i][o]=n,r.isDirected||(a[o][i]=n)},m=()=>{for(let i=0;i<t;i++)console.log(a[i].map(o=>o==null?"-":o).join(" "))},L=i=>{let o=[[-1,0],[1,0],[0,-1],[0,1]],n=[[0,0]],l=[];for(let e=0;e<t;e++)l[e]=[];let c=(e,s)=>e>=0&&e<t&&s>=0&&s<u&&!l[e][s];for(;n.length>0;){let[e,s]=n.shift();if(!l[e][s]){l[e][s]=!0,i(e,s);for(let b=0;b<o.length;b++){let[h,f]=o[b],p=e+h,x=s+f;c(p,x)&&n.push([p,x])}}}};return(()=>{if(r.initial){a=r.initial;return}for(let i=0;i<t;i++)a[i]=Array(u),r.defaultValue!==void 0&&a[i].fill(r.defaultValue)})(),{getMatrix:d,addEdge:g,printGraph:m,bfs:L}};0&&(module.exports={graph,matrix});
