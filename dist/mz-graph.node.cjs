/*
https://github.com/mzusin/mz-graph
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var M=Object.create;var _=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var q=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),R=(t,e)=>{for(var l in e)_(t,l,{get:e[l],enumerable:!0})},A=(t,e,l,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let b of E(e))!D.call(t,b)&&b!==l&&_(t,b,{get:()=>e[b],enumerable:!(i=C(e,b))||i.enumerable});return t};var G=(t,e,l)=>(l=t!=null?M(O(t)):{},A(e||!t||!t.__esModule?_(l,"default",{value:t,enumerable:!0}):l,t)),N=t=>A(_({},"__esModule",{value:!0}),t);var S=q((U,k)=>{k.exports=y;function y(t){this._comparator=t||y.DEFAULT_COMPARATOR,this._elements=[]}y.DEFAULT_COMPARATOR=function(t,e){return typeof t=="number"&&typeof e=="number"?t-e:(t=t.toString(),e=e.toString(),t==e?0:t>e?1:-1)};y.prototype.isEmpty=function(){return this.size()===0};y.prototype.peek=function(){if(this.isEmpty())throw new Error("PriorityQueue is empty");return this._elements[0]};y.prototype.deq=function(){var t=this.peek(),e=this._elements.pop(),l=this.size();if(l===0)return t;this._elements[0]=e;for(var i=0;i<l;){var b=i,w=2*i+1,g=2*i+2;if(w<l&&this._compare(w,b)>=0&&(b=w),g<l&&this._compare(g,b)>=0&&(b=g),b===i)break;this._swap(b,i),i=b}return t};y.prototype.enq=function(t){for(var e=this._elements.push(t),l=e-1;l>0;){var i=Math.floor((l-1)/2);if(this._compare(l,i)<=0)break;this._swap(i,l),l=i}return e};y.prototype.size=function(){return this._elements.length};y.prototype.forEach=function(t){return this._elements.forEach(t)};y.prototype._compare=function(t,e){return this._comparator(this._elements[t],this._elements[e])};y.prototype._swap=function(t,e){var l=this._elements[t];this._elements[t]=this._elements[e],this._elements[e]=l}});var $={};R($,{graph:()=>P,matrix:()=>z});module.exports=N($);var j=G(S(),1),P=t=>{let e=new Map,l=a=>{e.has(a.label)||e.set(a.label,[])},i=a=>{var n;return(n=e.get(a))!=null?n:null},b=(a,n)=>{var r,o;(r=e.get(a.label))==null||r.push(n),t.isDirected||(o=e.get(n.label))==null||o.push(a)},w=()=>{for(let[a,n]of e.entries()){let r=n.map(o=>{let f=o.value!==void 0?`(${o.value})`:"";return`${o.label}${f}`}).join(", ");console.log(`${a} -> [${r}]`)}},g=(a,n)=>{let r=new Set,o=s=>{let u=[s];for(r.add(s);u.length>0;){let c=u.shift();a(c);let L=i(c)||[];for(let v of L)r.has(v.label)||(r.add(v.label),u.push(v.label))}};if(n!==void 0){o(n);return}let f=e.keys();for(let s of f)r.has(s)||o(s)},T=(a,n)=>{let r=new Set,o=s=>{let u=[s];for(r.add(s);u.length>0;){let c=u.pop();a(c);let L=i(c)||[];for(let v of L)r.has(v.label)||(r.add(v.label),u.push(v.label))}};if(n!==void 0){o(n);return}let f=e.keys();for(let s of f)r.has(s)||o(s)},x=(a,n)=>{let r=new Set,o=s=>{if(r.has(s))return;r.add(s),a(s);let u=i(s);if(u)for(let c of u)o(c.label)};if(n!==void 0){o(n);return}let f=e.keys();for(let s of f)o(s)},d=()=>{let a=new Set,n=o=>{let f=[o];for(a.add(o);f.length>0;){let s=f.pop(),u=i(s)||[];for(let c of u){if(c.label!==s&&a.has(c.label))return!0;a.add(c.label),f.push(c.label)}}return!1},r=e.keys();for(let o of r)if(!a.has(o)&&n(o))return!0;return!1},h=()=>{let a=new Set,n=o=>{let f=[o];for(a.add(o);f.length>0;){let s=f.pop(),u=i(s)||[];for(let c of u){if(a.has(c.label))return!0;a.add(c.label),f.push(c.label)}}return!1},r=e.keys();for(let o of r)if(!a.has(o)&&n(o))return!0;return!1},p=()=>t.isDirected?h():d(),m=a=>{var f;let n=new Set,r=new j.default({comparator:(s,u)=>s.distance-u.distance}),o=new Map;for(let s of e.keys())o.set(s,1/0);for(o.set(a,0),r.enq({label:a,distance:0});!r.isEmpty();){let{label:s,distance:u}=r.deq();if(n.has(s))continue;n.add(s);let c=i(s)||[];for(let L of c){let v=(f=L.value)!=null?f:0,I=o[s]+v;I<o[L.label]&&(o[L.label]=I,r.enq({label:L.label,distance:I}))}}return o};return(()=>{if(!t.initial)return;let a=Object.keys(t.initial);for(let n of a){let r=t.initial[n]||[];e.set(n,r)}})(),{addVertex:l,getVertex:i,addEdge:b,printGraph:w,bfs:g,dfs:T,dfsRecursive:x,hasCycle:p,findShortestPathDijkstra:m}};var V=t=>{var e,l;if(t.initial){let i=t.initial.length,b=i>0?t.initial[0].length:0;return[i,b]}return[(e=t.rowsCount)!=null?e:0,(l=t.columnsCount)!=null?l:0]},z=t=>{let[e,l]=V(t),i=Array(e),b=()=>i,w=(d,h,p)=>{i[d][h]=p,t.isDirected||(i[h][d]=p)},g=()=>{for(let d=0;d<e;d++)console.log(i[d].map(h=>h==null?"-":h).join(" "))},T=d=>{let h=[[0,-1],[0,1],[-1,0],[1,0]],p=[[0,0]],m=[];for(let n=0;n<e;n++)m[n]=[];let a=(n,r)=>n>=0&&n<e&&r>=0&&r<l&&!m[n][r];for(;p.length>0;){let[n,r]=p.shift();if(!m[n][r]){m[n][r]=!0,d(n,r,i[n][r]);for(let o=0;o<h.length;o++){let[f,s]=h[o],u=n+f,c=r+s;a(u,c)&&p.push([u,c])}}}},x=d=>{let h=[[0,-1],[0,1],[-1,0],[1,0]],p=[[0,0]],m=[];for(let n=0;n<e;n++)m[n]=[];let a=(n,r)=>n>=0&&n<e&&r>=0&&r<l&&!m[n][r];for(;p.length>0;){let[n,r]=p.pop();if(!m[n][r]){m[n][r]=!0,d(n,r,i[n][r]);for(let o=0;o<h.length;o++){let[f,s]=h[o],u=n+f,c=r+s;a(u,c)&&p.push([u,c])}}}};return(()=>{if(t.initial){i=t.initial;return}for(let d=0;d<e;d++)i[d]=Array(l),t.defaultValue!==void 0&&i[d].fill(t.defaultValue)})(),{getMatrix:b,addEdge:w,printGraph:g,bfs:T,dfs:x}};0&&(module.exports={graph,matrix});
