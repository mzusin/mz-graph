/*
https://github.com/mzusin/mz-graph
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
var x=f=>{let a=new Map,h=n=>{a.has(n.label)||a.set(n.label,[])},s=n=>{var e;return(e=a.get(n))!=null?e:null};return{addVertex:h,getVertex:s,addEdge:(n,e)=>{var l,r;(l=a.get(n.label))==null||l.push(e),f||(r=a.get(e.label))==null||r.push(n)},printGraph:()=>{for(let[n,e]of a.entries()){let l=e.map(r=>r.label).join(", ");console.log(`${n} -> [${l}]`)}},bfs:n=>{let e=new Set,l=o=>{let c=[o];for(e.add(o);c.length>0;){let d=c.shift();n(d);let p=s(d)||[];for(let b of p)e.has(b.label)||(e.add(b.label),c.push(b.label))}},r=a.keys();for(let o of r)e.has(o)||l(o)},dfs:n=>{let e=new Set,l=o=>{let c=[o];for(e.add(o);c.length>0;){let d=c.pop();n(d);let p=s(d)||[];for(let b of p)e.has(b.label)||(e.add(b.label),c.push(b.label))}},r=a.keys();for(let o of r)e.has(o)||l(o)},dfsRecursive:n=>{let e=new Set,l=o=>{if(e.has(o))return;e.add(o),n(o);let c=s(o);if(c)for(let d of c)l(d.label)},r=a.keys();for(let o of r)l(o)}}},T=(f,a,h=void 0)=>{let s=Array(f),g=()=>s,u=(t,i,n)=>{s[t][i]=n,a||(s[i][t]=n)},L=()=>{for(let t=0;t<f;t++)console.log(s[t].map(i=>i==null?"-":i).join(" "))};return(()=>{for(let t=0;t<f;t++)s[t]=Array(f),h!==void 0&&s[t].fill(h)})(),{getMatrix:g,addEdge:u,printGraph:L}};export{x as graph,T as matrix};
