/*
https://github.com/mzusin/mz-graph
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var T=Object.defineProperty;var m=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var v=(i,r,s)=>r in i?T(i,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[r]=s,x=(i,r)=>{for(var s in r||(r={}))w.call(r,s)&&v(i,s,r[s]);if(m)for(var s of m(r))I.call(r,s)&&v(i,s,r[s]);return i};var y=i=>{let r=new Map,s=e=>{r.has(e.label)||r.set(e.label,[])},c=e=>{var o;return(o=r.get(e))!=null?o:null};return{addVertex:s,getVertex:c,addEdge:(e,o)=>{var t,a;(t=r.get(e.label))==null||t.push(o),i||(a=r.get(o.label))==null||a.push(e)},printGraph:()=>{for(let[e,o]of r.entries()){let t=o.map(a=>a.label).join(", ");console.log(`${e} -> [${t}]`)}},bfs:(e,o)=>{let t=new Set;t.add(e);let a=[e];for(;a.length>0;){let n=a.shift();o(n);let b=c(n)||[];for(let f of b)t.has(f.label)||(t.add(f.label),a.push(f.label))}},inorderRecursive:e=>{let o=new Set,t=n=>{if(o.has(n))return;o.add(n);let b=c(n);if(b){for(let f of b)t(f.label);e(n)}},a=r.keys();for(let n of a)t(n)},preorderRecursive:e=>{let o=new Set,t=n=>{if(o.has(n))return;o.add(n),e(n);let b=c(n);if(b)for(let f of b)t(f.label)},a=r.keys();for(let n of a)t(n)},postorderRecursive:e=>{let o=new Set,t=n=>{if(o.has(n))return;o.add(n);let b=c(n);if(b){for(let f of b)t(f.label);e(n)}},a=r.keys();for(let n of a)t(n)}}},G=(i,r,s=void 0)=>{let c=Array(i),u=()=>c,p=(d,g,l)=>{c[d][g]=l,r||(c[g][d]=l)},h=()=>{for(let d=0;d<i;d++)console.log(c[d].map(g=>g==null?"-":g).join(" "))};return(()=>{for(let d=0;d<i;d++)c[d]=Array(i),s!==void 0&&c[d].fill(s)})(),{getMatrix:u,addEdge:p,printGraph:h}};var S=x({},y);window.mzGraph=window.mzGraph||S;})();
