/*
https://github.com/mzusin/mz-graph
MIT License      
Copyright (c) 2023-present, Miriam Zusin       
*/
(()=>{var h=Object.defineProperty;var l=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var s=(e,n,t)=>n in e?h(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,g=(e,n)=>{for(var t in n||(n={}))x.call(n,t)&&s(e,t,n[t]);if(l)for(var t of l(n))m.call(n,t)&&s(e,t,n[t]);return e};var f=e=>{let n=new Map;return{addVertex:o=>{n.has(o.label)||n.set(o.label,[])},getVertex:o=>{var r;return(r=n.get(o))!=null?r:null},addEdge:(o,r)=>{var a,i;(a=n.get(o.label))==null||a.push(r),e||(i=n.get(r.label))==null||i.push(o)},printGraph:()=>{for(let[o,r]of n.entries()){let a=r.map(i=>i.label).join(", ");console.log(`${o} -> [${a}]`)}}}},u=(e,n,t=void 0)=>{let d=Array(e),p=()=>d,c=(r,a,i)=>{d[r][a]=i,n||(d[a][r]=i)},o=()=>{for(let r=0;r<e;r++)console.log(d[r].map(a=>a==null?"-":a).join(" "))};return(()=>{for(let r=0;r<e;r++)d[r]=Array(e),t!==void 0&&d[r].fill(t)})(),{getMatrix:p,addEdge:c,printGraph:o}};var T=g({},f);window.mzGraph=window.mzGraph||T;})();
